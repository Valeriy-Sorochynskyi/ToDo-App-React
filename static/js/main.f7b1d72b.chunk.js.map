{"version":3,"sources":["App.js","index.js"],"names":["ToDo","state","isEditing","currentValue","startEditing","_this","setState","props","text","handleTextChange","event","key","onTextChanged","_this2","this","_this$props","id","done","onChange","onDelete","classes","push","react_default","a","createElement","onDoubleClick","className","join","concat","type","checked","htmlFor","onClick","onKeyPress","value","target","React","Component","ToDoList","items","newItemText","checkedAll","toggleItem","item","_this3","_ref","index","indexOf","newItems","Object","toConsumableArray","objectSpread","changeText","_ref2","handleDelete","_ref3","filter","current","addItem","_ref4","newItem","Date","handleItemAdd","preventDefault","handleNewItemTextChange","clearCompleted","_ref5","checkAll","_ref6","forEach","handleOnActive","_ref7","handleOnCompleted","_ref8","completedItems","_this4","activeItems","onSubmit","placeholder","autoFocus","map","App_ToDo","length","App_Filters","onActive","onCompleted","Filters","isSelected","href","App","App_ToDoList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f7b1d72b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nclass ToDo extends React.Component {\n  state = {\n    isEditing: false,\n    currentValue: \"\"\n  };\n\n  startEditing = () => {\n    this.setState({\n      isEditing: true,\n      currentValue: this.props.text\n    });\n  };\n\n  handleTextChange = event => {\n    if (event.key !== \"Enter\") {\n      return;\n    }\n\n    this.props.onTextChanged(this.state.currentValue);\n\n    this.setState({\n      currentValue: \"\",\n      isEditing: false\n    });\n  };\n\n  render() {\n    const { id, done, text, onChange, onDelete } = this.props;\n    const classes = [];\n    if (done) {\n      classes.push(\"completed\");\n    }\n\n    if (this.state.isEditing) {\n      classes.push(\"editing\");\n    }\n\n    return (\n      <li onDoubleClick={this.startEditing} className={classes.join(\" \")}>\n        <div className=\"view\">\n          <input\n            id={`todo-${id}`}\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={done}\n            onChange={onChange}\n          />\n          <label htmlFor={`todo-${id}`}>{text}</label>\n          <button className=\"destroy\" onClick={onDelete} />\n        </div>\n\n        {this.state.isEditing && (\n          <input\n            onKeyPress={this.handleTextChange}\n            value={this.state.currentValue}\n            onChange={event =>\n              this.setState({ currentValue: event.target.value })\n            }\n            type=\"text\"\n            className=\"edit\"\n          />\n        )}\n      </li>\n    );\n  }\n}\n\nclass ToDoList extends React.Component {\n  state = {\n    items: [],\n    newItemText: \"\",\n    checkedAll: false\n  };\n\n  toggleItem = item => {\n    this.setState(({ items }) => {\n      const index = items.indexOf(item);\n      const newItems = [...items];\n\n      newItems[index] = {\n        ...item,\n        done: !item.done\n      };\n\n      return {\n        items: newItems\n      };\n    });\n  };\n\n  changeText = (item, text) => {\n    this.setState(({ items }) => {\n      const index = items.indexOf(item);\n      const newItems = [...items];\n      newItems[index] = {\n        ...item,\n        text\n      };\n\n      return {\n        items: newItems\n      };\n    });\n  };\n\n  handleDelete = item => {\n    this.setState(({ items }) => {\n      return {\n        items: items.filter(current => current !== item)\n      };\n    });\n  };\n\n  addItem = text => {\n    if (text===\"\"){\n      return\n    }\n    this.setState(({ items }) => {\n      const newItem = {\n        id: `${+new Date()}`,\n        done: false,\n        text\n      };\n\n      return {\n        items: [...items, newItem],\n        newItemText: \"\"\n      };\n    });\n  };\n\n  handleItemAdd = event => {\n    event.preventDefault();\n\n    this.addItem(this.state.newItemText);\n  };\n\n  handleNewItemTextChange = event => {\n    this.setState({\n      newItemText: event.target.value\n    });\n  };\n\n  clearCompleted = () => {\n    this.setState(({ items }) => {\n      return {\n        items: items.filter(item => !item.done)\n      };\n    });\n  };\n\n  checkAll = () => {\n    this.setState(({ items, checkedAll }) => {\n      const newItems = [...items];\n      newItems.forEach(item => {\n        this.state.checkedAll ? (item.done = false) : (item.done = true);\n      });\n      return {\n        items: newItems,\n        checkedAll: !checkedAll\n      };\n    });\n  };\n\n  handleOnActive = () => {\n    this.setState(({items}) => {\n      return {\n        items: items.filter(item => !item.done)\n      }\n    })\n  }\n\n  handleOnCompleted = () => {\n    this.setState(({items, completedItems}) => {\n      return {\n        items: items.filter(item => item.done)\n      }\n    })\n  }\n\n  render() {\n    const activeItems = this.state.items.filter(item => !item.done);\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form onSubmit={this.handleItemAdd}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              autoFocus=\"\"\n              value={this.state.newItemText}\n              onChange={this.handleNewItemTextChange}\n            />\n          </form>\n        </header>\n\n        <section className=\"main\">\n          <input\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            onChange={this.checkAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <ul className=\"todo-list\">\n            {this.state.items.map(item => (\n              <ToDo\n                key={item.id}\n                id={item.id}\n                text={item.text}\n                done={item.done}\n                onChange={() => this.toggleItem(item)}\n                onDelete={() => this.handleDelete(item)}\n                onTextChanged={text => this.changeText(item, text)}\n              />\n            ))}\n          </ul>\n        </section>\n\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            <strong>{activeItems.length}</strong> item left\n          </span>\n              <Filters \n              onActive={this.handleOnActive} \n              onCompleted={this.handleOnCompleted}\n              />\n          <button onClick={this.clearCompleted} className=\"clear-completed\">\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nclass Filters extends React.Component {\n  state = {\n    isSelected: false\n  }\n  render() {\n    return (\n      <ul className=\"filters\">\n        <li>\n          <a href=\"#/\" className=\"selected\">\n            All\n          </a>\n        </li>\n        <li>\n          <a onClick={this.props.onActive} href=\"#/active\">Active</a>\n        </li>\n        <li>\n          <a onClick={this.props.onCompleted} href=\"#/completed\">Completed</a>\n        </li>\n      </ul>\n    );\n  }\n}\n\nconst App = () => (\n  <div className=\"App\">\n    <ToDoList />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}