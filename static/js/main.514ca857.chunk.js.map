{"version":3,"sources":["App.js","index.js"],"names":["ToDo","state","isEditing","currentValue","startEditing","_this","setState","props","text","handleTextChange","event","key","onTextChanged","_this2","this","_this$props","id","done","onChange","onDelete","classes","push","react_default","a","createElement","onDoubleClick","className","join","concat","type","checked","htmlFor","onClick","onKeyPress","value","target","React","Component","ToDoList","items","newItemText","toggleItem","item","_this3","_ref","index","indexOf","newItems","Object","toConsumableArray","objectSpread","changeText","_ref2","handleDelete","_ref3","filter","current","addItem","_ref4","newItem","Date","handleItemAdd","preventDefault","handleNewItemTextChange","clearCompleted","_ref5","_this4","activeItems","onSubmit","placeholder","autoFocus","map","App_ToDo","length","href","App","App_ToDoList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.514ca857.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nclass ToDo extends React.Component {\n  state = {\n    isEditing: false,\n    currentValue: '',\n  };\n\n  startEditing = () => {\n    this.setState({\n      isEditing: true,\n      currentValue: this.props.text,\n    });\n  };\n\n  handleTextChange = (event) => {\n    if (event.key !== 'Enter') {\n      return;\n    }\n\n    this.props.onTextChanged(this.state.currentValue);\n\n    this.setState({\n      currentValue: '',\n      isEditing: false,\n    });\n  };\n\n  render() {\n    const { id, done, text, onChange, onDelete } = this.props;\n    const classes = [];\n    if (done) {\n      classes.push('completed');\n    }\n\n    if (this.state.isEditing) {\n      classes.push('editing')\n    }\n\n    return (\n      <li\n        onDoubleClick={this.startEditing}\n        className={classes.join(' ')}\n      >\n        <div className=\"view\">\n          <input\n            id={`todo-${id}`}\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={done}\n            onChange={onChange}\n          />\n          <label htmlFor={`todo-${id}`}>{text}</label>\n          <button className=\"destroy\" onClick={onDelete} />\n        </div>\n\n        { this.state.isEditing && (\n          <input\n            onKeyPress={this.handleTextChange}\n            value={this.state.currentValue}\n            onChange={(event) => this.setState({ currentValue: event.target.value })}\n            type=\"text\"\n            className=\"edit\"\n          />\n        ) }\n\n      </li>\n    );\n  }\n}\n\nclass ToDoList extends React.Component {\n  state = {\n    items: [],\n    newItemText: ''\n  };\n\n  toggleItem = (item) => {\n    this.setState(({ items }) => {\n      const index = items.indexOf(item);\n      const newItems = [...items];\n\n      newItems[index] = {\n        ...item,\n        done: !item.done,\n      };\n\n      return {\n        items: newItems,\n      };\n    })\n  };\n\n  changeText = (item, text) => {\n    this.setState(({ items }) => {\n      const index = items.indexOf(item);\n      const newItems = [...items];\n      newItems[index] = {\n        ...item,\n        text,\n      };\n\n      return {\n        items: newItems,\n      };\n    })\n  };\n\n  handleDelete = (item) => {\n    this.setState(({items}) => {\n      return {\n        items: items.filter(current => current !== item),\n      };\n    })\n  };\n\n  addItem = (text) => {\n    this.setState(({items}) => {\n      const newItem = {\n        id: `${+new Date()}`,\n        done: false,\n        text,\n      };\n\n      return {\n        items: [...items, newItem],\n        newItemText: '',\n      };\n    });\n  };\n\n  handleItemAdd = (event) => {\n    event.preventDefault();\n\n    this.addItem(this.state.newItemText);\n  };\n\n  handleNewItemTextChange = (event) => {\n    this.setState({\n      newItemText: event.target.value,\n    });\n  };\n\n  clearCompleted = () => {\n    this.setState(({ items }) => {\n      return {\n        items: items.filter(item => !item.done),\n      };\n    });\n  };\n\n\n  render() {\n    const activeItems = this.state.items.filter(item => !item.done);\n\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form onSubmit={this.handleItemAdd}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              autoFocus=\"\"\n              value={this.state.newItemText}\n              onChange={this.handleNewItemTextChange}\n            />\n          </form>\n        </header>\n\n        <section className=\"main\">\n          <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" />\n            <label htmlFor=\"toggle-all\">Mark all as complete</label>\n            <ul className=\"todo-list\">\n              { this.state.items.map(item => (\n                <ToDo\n                  key={item.id}\n                  id={item.id}\n                  text={item.text}\n                  done={item.done}\n                  onChange={() => this.toggleItem(item)}\n                  onDelete={() => this.handleDelete(item)}\n                  onTextChanged={(text) => this.changeText(item, text)}\n                />\n              ))}\n            </ul>\n        </section>\n\n        <footer className=\"footer\">\n\n          <span className=\"todo-count\"><strong>{activeItems.length}</strong> item left</span>\n          <ul className=\"filters\">\n            <li>\n              <a href=\"#/\" className=\"selected\">All</a>\n            </li>\n            <li>\n              <a href=\"#/active\">Active</a>\n            </li>\n            <li>\n              <a href=\"#/completed\">Completed</a>\n            </li>\n          </ul>\n          <button\n            onClick={this.clearCompleted}\n            className=\"clear-completed\"\n          >\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\n\n\n\nconst App = () => (\n  <div className=\"App\">\n    <ToDoList />\n  </div>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}