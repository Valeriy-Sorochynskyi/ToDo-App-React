{"version":3,"sources":["App.js","index.js"],"names":["ToDo","state","isEditing","currentValue","startEditing","_this","setState","props","text","handleTextChange","event","key","onTextChanged","_this2","this","_this$props","id","done","onChange","onDelete","classes","push","react_default","a","createElement","onDoubleClick","className","join","concat","type","checked","htmlFor","onClick","onKeyPress","value","target","React","Component","ToDoList","items","newItemText","checkedAll","sortBy","toggleItem","_this3","_ref","map","item","Object","objectSpread","changeText","_ref2","handleDelete","_ref3","filter","current","addItem","_ref4","newItem","Date","toConsumableArray","handleItemAdd","preventDefault","handleNewItemTextChange","clearCompleted","_ref5","checkAll","_ref6","newItems","forEach","handleOnAll","prevState","handleOnActive","handleOnCompleted","filterItems","_ref7","_this4","activeItems","onSubmit","placeholder","autoFocus","App_ToDo","length","App_Filters","onAll","onActive","onCompleted","Filters","_ref8","href","App","App_ToDoList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.991b54fb.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\n\nclass ToDo extends React.Component {\n  state = {\n    isEditing: false,\n    currentValue: \"\"\n  };\n\n  startEditing = () => {\n    this.setState({\n      isEditing: true,\n      currentValue: this.props.text\n    });\n  };\n\n  handleTextChange = event => {\n    if (event.key !== \"Enter\") {\n      return;\n    }\n\n    this.props.onTextChanged(this.state.currentValue);\n\n    this.setState({\n      currentValue: \"\",\n      isEditing: false\n    });\n  };\n\n  render() {\n    const { id, done, text, onChange, onDelete } = this.props;\n    const classes = [];\n    if (done) {\n      classes.push(\"completed\");\n    }\n\n    if (this.state.isEditing) {\n      classes.push(\"editing\");\n    }\n\n    return (\n      <li onDoubleClick={this.startEditing} className={classes.join(\" \")}>\n        <div className=\"view\">\n          <input\n            id={`todo-${id}`}\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={done}\n            onChange={onChange}\n          />\n          <label htmlFor={`todo-${id}`}>{text}</label>\n          <button className=\"destroy\" onClick={onDelete} />\n        </div>\n\n        {this.state.isEditing && (\n          <input\n            onKeyPress={this.handleTextChange}\n            value={this.state.currentValue}\n            onChange={event =>\n              this.setState({ currentValue: event.target.value })\n            }\n            type=\"text\"\n            className=\"edit\"\n          />\n        )}\n      </li>\n    );\n  }\n}\n\nclass ToDoList extends React.Component {\n  state = {\n    items: [],\n    newItemText: \"\",\n    checkedAll: false,\n    sortBy: \"\"\n  };\n\n  toggleItem = id => {\n    this.setState(({ items }) => {\n      const newItems = items.map(item => {\n        if (item.id === id) {\n          return {\n            ...item,\n            done: !item.done\n          };\n        }\n        return item;\n      });\n\n      return {\n        items: newItems\n      };\n    });\n  };\n\n  changeText = (id, text) => {\n    this.setState(({ items }) => {\n      const newItems = items.map(item => {\n        if (item.id === id) {\n          return {\n            ...item,\n            text\n          };\n        }\n        return item;\n      });\n\n      return {\n        items: newItems\n      };\n    });\n  };\n\n  handleDelete = id => {\n    this.setState(({ items }) => {\n      return {\n        items: items.filter(current => current.id !== id)\n      };\n    });\n  };\n\n  addItem = text => {\n    if (text === \"\") {\n      return;\n    }\n    this.setState(({ items }) => {\n      const newItem = {\n        id: `${+new Date()}`,\n        done: false,\n        text\n      };\n\n      return {\n        items: [...items, newItem],\n        newItemText: \"\"\n      };\n    });\n  };\n\n  handleItemAdd = event => {\n    event.preventDefault();\n\n    this.addItem(this.state.newItemText);\n  };\n\n  handleNewItemTextChange = event => {\n    this.setState({\n      newItemText: event.target.value\n    });\n  };\n\n  clearCompleted = () => {\n    this.setState(({ items }) => {\n      return {\n        items: items.filter(item => !item.done)\n      };\n    });\n  };\n\n  checkAll = () => {\n    this.setState(({ items, checkedAll }) => {\n      const newItems = [...items];\n      newItems.forEach(item => {\n        this.state.checkedAll ? (item.done = false) : (item.done = true);\n      });\n      return {\n        items: newItems,\n        checkedAll: !checkedAll\n      };\n    });\n  };\n\n  handleOnAll = () => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        sortBy: \"all\"\n      };\n    });\n  };\n\n  handleOnActive = () => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        sortBy: \"active\"\n      };\n    });\n  };\n\n  handleOnCompleted = () => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        sortBy: \"done\"\n      };\n    });\n  };\n\n  filterItems = ({ items, sortBy }) => {\n    switch (sortBy) {\n      case \"all\":\n        return items;\n      case \"done\":\n        return items.filter(item => item.done);\n      case \"active\":\n        return items.filter(item => !item.done);\n      default:\n        return items;\n    }\n  };\n\n  render() {\n    const activeItems = this.state.items.filter(item => !item.done);\n    const items = this.filterItems(this.state);\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n          <form onSubmit={this.handleItemAdd}>\n            <input\n              className=\"new-todo\"\n              placeholder=\"What needs to be done?\"\n              autoFocus=\"\"\n              value={this.state.newItemText}\n              onChange={this.handleNewItemTextChange}\n            />\n          </form>\n        </header>\n\n        <section className=\"main\">\n          <input\n            id=\"toggle-all\"\n            className=\"toggle-all\"\n            type=\"checkbox\"\n            onChange={this.checkAll}\n          />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <ul className=\"todo-list\">\n            {items.map(item => (\n              <ToDo\n                key={item.id}\n                id={item.id}\n                text={item.text}\n                done={item.done}\n                onChange={() => this.toggleItem(item.id)}\n                onDelete={() => this.handleDelete(item.id)}\n                onTextChanged={text => this.changeText(item.id, text)}\n              />\n            ))}\n          </ul>\n        </section>\n\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            <strong>{activeItems.length}</strong> item left\n          </span>\n          <Filters\n            onAll={this.handleOnAll}\n            onActive={this.handleOnActive}\n            onCompleted={this.handleOnCompleted}\n          />\n          <button onClick={this.clearCompleted} className=\"clear-completed\">\n            Clear completed\n          </button>\n        </footer>\n      </section>\n    );\n  }\n}\n\nconst Filters = ({ onAll, onActive, onCompleted }) => {\n  return (\n    <ul className=\"filters\">\n      <li>\n        <a onClick={onAll} href=\"#/\" className=\"selected\">\n          All\n        </a>\n      </li>\n      <li>\n        <a onClick={onActive} href=\"#/active\" className=\"selected\">\n          Active\n        </a>\n      </li>\n      <li>\n        <a onClick={onCompleted} href=\"#/completed\" className=\"selected\">\n          Completed\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nconst App = () => (\n  <div className=\"App\">\n    <ToDoList />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}